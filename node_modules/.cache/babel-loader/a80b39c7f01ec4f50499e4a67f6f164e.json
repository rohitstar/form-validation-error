{"ast":null,"code":"var _jsxFileName = \"/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hook/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isInputEmpty = value => value.trim() !== '';\n\nconst isInputEmailEmpty = value => value.includes('@');\n\nconst BasicForm = () => {\n  _s();\n\n  const {\n    value: enteredFirstNameText,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameInputChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetInputFirstName\n  } = useInput(isInputEmpty);\n  const {\n    value: enteredLastNameText,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetInputLastName\n  } = useInput(isInputEmpty);\n  const {\n    value: enteredEmailText,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetInputEmail\n  } = useInput(isInputEmailEmpty);\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = () => {\n    // setEnteredNameTouched(true);\n    // setEnteredEmailTouched(true);\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstNameText);\n    console.log(enteredLastNameText);\n    console.log(enteredEmailText);\n    resetInputFirstName();\n    resetInputLastName();\n    resetInputEmail();\n  };\n\n  const inputFirstNameBoxEffect = firstNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const inputLastNameBoxEffect = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const inputEmailBoxEffect = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputFirstNameBoxEffect,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredFirstNameText,\n          onBlur: firstNameInputBlurHandler,\n          onChange: firstNameInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputLastNameBoxEffect,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastNameText,\n          onBlur: lastNameInputBlurHandler,\n          onChange: lastNameInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailBoxEffect,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmailText,\n        onBlur: emailInputBlurHandler,\n        onChange: emailInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        onClick: formSubmissionHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"7EwOGoC1Tnpj92usHaU8SAGOGQA=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/BasicForm.js"],"names":["useInput","isInputEmpty","value","trim","isInputEmailEmpty","includes","BasicForm","enteredFirstNameText","isValid","enteredFirstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameInputChangeHandler","inputBlurHandler","firstNameInputBlurHandler","reset","resetInputFirstName","enteredLastNameText","enteredLastNameIsValid","lastNameInputHasError","lastNameInputChangeHandler","lastNameInputBlurHandler","resetInputLastName","enteredEmailText","enteredEmailIsValid","emailInputHasError","emailInputChangeHandler","emailInputBlurHandler","resetInputEmail","formIsValid","formSubmissionHandler","console","log","inputFirstNameBoxEffect","inputLastNameBoxEffect","inputEmailBoxEffect"],"mappings":"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","sourcesContent":["import useInput from \"../hook/use-input\";\n\nconst isInputEmpty = value => value.trim() !== ''\n\n\nconst isInputEmailEmpty = value => value.includes('@')\n  \n\nconst BasicForm = () => {\n\nconst {\n  value: enteredFirstNameText,\n  isValid: enteredFirstNameIsValid,\n  hasError: firstNameInputHasError,\n  valueChangeHandler: firstNameInputChangeHandler,\n  inputBlurHandler: firstNameInputBlurHandler,\n  reset : resetInputFirstName,\n} = useInput(isInputEmpty);\n\nconst {\n  value: enteredLastNameText,\n  isValid: enteredLastNameIsValid,\n  hasError: lastNameInputHasError,\n  valueChangeHandler: lastNameInputChangeHandler,\n  inputBlurHandler: lastNameInputBlurHandler,\n  reset : resetInputLastName,\n} = useInput(isInputEmpty);\n\nconst {\n  value: enteredEmailText,\n  isValid: enteredEmailIsValid,\n  hasError: emailInputHasError,\n  valueChangeHandler: emailInputChangeHandler,\n  inputBlurHandler: emailInputBlurHandler,\n  reset : resetInputEmail,\n} = useInput(isInputEmailEmpty);\n\n\nlet formIsValid = false;\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid ) {\n    formIsValid = true;\n  } \n\n  const formSubmissionHandler = () => {\n    // setEnteredNameTouched(true);\n    // setEnteredEmailTouched(true);\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid ) {\n      return;\n    }\n    \n    console.log(enteredFirstNameText);\n    console.log(enteredLastNameText);\n    console.log(enteredEmailText);\n\n    resetInputFirstName();\n    resetInputLastName();\n    resetInputEmail();\n  };\n\n  const inputFirstNameBoxEffect = firstNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const inputLastNameBoxEffect = lastNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const inputEmailBoxEffect = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form>\n      <div className='control-group'>\n        <div className={inputFirstNameBoxEffect}>\n          <label htmlFor='name'>First Name</label>\n          <input \n          type='text' \n          id='name'\n          value={enteredFirstNameText}\n          onBlur={firstNameInputBlurHandler}\n          onChange={firstNameInputChangeHandler}\n           />\n        </div>\n        <div className={inputLastNameBoxEffect}>\n          <label htmlFor='name'>Last Name</label>\n          <input \n          type='text' \n          id='name'\n          value={enteredLastNameText}\n          onBlur={lastNameInputBlurHandler}\n          onChange={lastNameInputChangeHandler} \n          />\n        </div>\n      </div>\n      <div className={inputEmailBoxEffect}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input \n        type='text' \n        id='name' \n        value={enteredEmailText}\n        onBlur={emailInputBlurHandler}\n        onChange={emailInputChangeHandler} \n        />\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid} onClick={formSubmissionHandler}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}