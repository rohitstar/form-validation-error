{"ast":null,"code":"var _jsxFileName = \"/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from './hook/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isInputEmpty = value => value.trim() !== '';\n\nconst isInputEmailEmpty = value => value.includes('@');\n\nconst BasicForm = () => {\n  _s();\n\n  const {\n    value: enteredFirstNameText,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameInputChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetInputFirstName\n  } = useInput(isInputEmpty);\n  const {\n    value: enteredLastNameText,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetInputLastName\n  } = useInput(isInputEmpty);\n  const {\n    value: enteredEmailText,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetInputEmail\n  } = useInput(isInputEmailEmpty);\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = () => {\n    // setEnteredNameTouched(true);\n    // setEnteredEmailTouched(true);\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstNameText);\n    console.log(enteredLastNameText);\n    console.log(enteredEmailText);\n    resetInputFirstName();\n    resetInputLastName();\n    resetInputEmail();\n  };\n\n  const inputFirstNameBoxEffect = firstNameInputHasError ? 'form-control invalid' : 'form-control';\n  const inputLastNameBoxEffect = lastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const inputEmailBoxEffect = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputFirstNameBoxEffect,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first-name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"first-name\",\n          value: enteredFirstNameText,\n          onBlur: firstNameInputBlurHandler,\n          onChange: firstNameInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please Enter The First Name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputLastNameBoxEffect,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"last-name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"last-name\",\n          value: enteredLastNameText,\n          onBlur: lastNameInputBlurHandler,\n          onChange: lastNameInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please Enter The Last Name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputEmailBoxEffect,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmailText,\n        onBlur: emailInputBlurHandler,\n        onChange: emailInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter The Email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        onClick: formSubmissionHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"xcl4t1KaGzi8LH0PLUKksajma54=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/BasicForm.js"],"names":["useInput","isInputEmpty","value","trim","isInputEmailEmpty","includes","BasicForm","enteredFirstNameText","isValid","enteredFirstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameInputChangeHandler","inputBlurHandler","firstNameInputBlurHandler","reset","resetInputFirstName","enteredLastNameText","enteredLastNameIsValid","lastNameInputHasError","lastNameInputChangeHandler","lastNameInputBlurHandler","resetInputLastName","enteredEmailText","enteredEmailIsValid","emailInputHasError","emailInputChangeHandler","emailInputBlurHandler","resetInputEmail","formIsValid","formSubmissionHandler","console","log","inputFirstNameBoxEffect","inputLastNameBoxEffect","inputEmailBoxEffect"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAAjD;;AACA,MAAMC,iBAAiB,GAAIF,KAAD,IAAWA,KAAK,CAACG,QAAN,CAAe,GAAf,CAArC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AACJJ,IAAAA,KAAK,EAAEK,oBADH;AAEJC,IAAAA,OAAO,EAAEC,uBAFL;AAGJC,IAAAA,QAAQ,EAAEC,sBAHN;AAIJC,IAAAA,kBAAkB,EAAEC,2BAJhB;AAKJC,IAAAA,gBAAgB,EAAEC,yBALd;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFjB,QAAQ,CAACC,YAAD,CAPZ;AASA,QAAM;AACJC,IAAAA,KAAK,EAAEgB,mBADH;AAEJV,IAAAA,OAAO,EAAEW,sBAFL;AAGJT,IAAAA,QAAQ,EAAEU,qBAHN;AAIJR,IAAAA,kBAAkB,EAAES,0BAJhB;AAKJP,IAAAA,gBAAgB,EAAEQ,wBALd;AAMJN,IAAAA,KAAK,EAAEO;AANH,MAOFvB,QAAQ,CAACC,YAAD,CAPZ;AASA,QAAM;AACJC,IAAAA,KAAK,EAAEsB,gBADH;AAEJhB,IAAAA,OAAO,EAAEiB,mBAFL;AAGJf,IAAAA,QAAQ,EAAEgB,kBAHN;AAIJd,IAAAA,kBAAkB,EAAEe,uBAJhB;AAKJb,IAAAA,gBAAgB,EAAEc,qBALd;AAMJZ,IAAAA,KAAK,EAAEa;AANH,MAOF7B,QAAQ,CAACI,iBAAD,CAPZ;AASA,MAAI0B,WAAW,GAAG,KAAlB;;AACA,MACErB,uBAAuB,IACvBU,sBADA,IAEAM,mBAHF,EAIE;AACAK,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,qBAAqB,GAAG,MAAM;AAClC;AACA;AACA,QACE,CAACtB,uBAAD,IACA,CAACU,sBADD,IAEA,CAACM,mBAHH,EAIE;AACA;AACD;;AAEDO,IAAAA,OAAO,CAACC,GAAR,CAAY1B,oBAAZ;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAYf,mBAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEAP,IAAAA,mBAAmB;AACnBM,IAAAA,kBAAkB;AAClBM,IAAAA,eAAe;AAChB,GAlBD;;AAoBA,QAAMK,uBAAuB,GAAGvB,sBAAsB,GAClD,sBADkD,GAElD,cAFJ;AAIA,QAAMwB,sBAAsB,GAAGf,qBAAqB,GAChD,sBADgD,GAEhD,cAFJ;AAIA,QAAMgB,mBAAmB,GAAGV,kBAAkB,GAC1C,sBAD0C,GAE1C,cAFJ;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEQ,uBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,YAFL;AAGE,UAAA,KAAK,EAAE3B,oBAHT;AAIE,UAAA,MAAM,EAAEQ,yBAJV;AAKE,UAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGF,sBAAsB,iBACrB;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAEwB,sBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,WAFL;AAGE,UAAA,KAAK,EAAEjB,mBAHT;AAIE,UAAA,MAAM,EAAEI,wBAJV;AAKE,UAAA,QAAQ,EAAED;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGD,qBAAqB,iBACpB;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE;AAAK,MAAA,SAAS,EAAEgB,mBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAEZ,gBAHT;AAIE,QAAA,MAAM,EAAEI,qBAJV;AAKE,QAAA,QAAQ,EAAED;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,EASGD,kBAAkB,iBACjB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eA0CE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACI,WAAnB;AAAgC,QAAA,OAAO,EAAEC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAvHD;;GAAMzB,S;UAQAN,Q,EASAA,Q,EASAA,Q;;;KA1BAM,S;AAyHN,eAAeA,SAAf","sourcesContent":["import useInput from './hook/use-input'\n\nconst isInputEmpty = (value) => value.trim() !== ''\nconst isInputEmailEmpty = (value) => value.includes('@')\n\nconst BasicForm = () => {\n  const {\n    value: enteredFirstNameText,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameInputChangeHandler,\n    inputBlurHandler: firstNameInputBlurHandler,\n    reset: resetInputFirstName,\n  } = useInput(isInputEmpty)\n\n  const {\n    value: enteredLastNameText,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    reset: resetInputLastName,\n  } = useInput(isInputEmpty)\n\n  const {\n    value: enteredEmailText,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetInputEmail,\n  } = useInput(isInputEmailEmpty)\n\n  let formIsValid = false\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true\n  }\n\n  const formSubmissionHandler = () => {\n    // setEnteredNameTouched(true);\n    // setEnteredEmailTouched(true);\n    if (\n      !enteredFirstNameIsValid &&\n      !enteredLastNameIsValid &&\n      !enteredEmailIsValid\n    ) {\n      return\n    }\n\n    console.log(enteredFirstNameText)\n    console.log(enteredLastNameText)\n    console.log(enteredEmailText)\n\n    resetInputFirstName()\n    resetInputLastName()\n    resetInputEmail()\n  }\n\n  const inputFirstNameBoxEffect = firstNameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  const inputLastNameBoxEffect = lastNameInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  const inputEmailBoxEffect = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control'\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={inputFirstNameBoxEffect}>\n          <label htmlFor=\"first-name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"first-name\"\n            value={enteredFirstNameText}\n            onBlur={firstNameInputBlurHandler}\n            onChange={firstNameInputChangeHandler}\n          />\n          {firstNameInputHasError && (\n            <p className=\"error-text\">Please Enter The First Name!</p>\n          )}\n        </div>\n        <div className={inputLastNameBoxEffect}>\n          <label htmlFor=\"last-name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"last-name\"\n            value={enteredLastNameText}\n            onBlur={lastNameInputBlurHandler}\n            onChange={lastNameInputChangeHandler}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Please Enter The Last Name!</p>\n          )}\n        </div>\n      </div>\n      <div className={inputEmailBoxEffect}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmailText}\n          onBlur={emailInputBlurHandler}\n          onChange={emailInputChangeHandler}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please Enter The Email!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} onClick={formSubmissionHandler}>\n          Submit\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default BasicForm\n"]},"metadata":{},"sourceType":"module"}