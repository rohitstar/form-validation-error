{"ast":null,"code":"var _jsxFileName = \"/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredText, setEnteredText] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name Input is Valid!\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredText(event.target.value);\n  };\n\n  const formSubmissionHandler = () => {\n    // event.perventDefault();\n    if (enteredText.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameTouched(true);\n    setEnteredNameIsValid(true);\n    console.log(enteredText);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredText(\"\");\n  };\n\n  const inputNameBox = !enteredNameIsValid && enteredNameTouched;\n  const inputBoxEffect = enteredNameIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputBoxEffect,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        value: enteredText,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), inputNameBox && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not empty!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formSubmissionHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0ugDq28JatwCQMWhmMQjMu2FVM0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/rohitchauhan/Desktop/reactjs/form-validation-custom-hook/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","nameInputRef","enteredText","setEnteredText","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","trim","enteredValue","current","inputNameBox","inputBoxEffect"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,YAAY,GAAGH,MAAM,EAA3B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,kBAAJ,EAAwB;AACtBI,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GAJQ,EAIN,CAACL,kBAAD,CAJM,CAAT;;AAMA,QAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAG,MAAM;AAClC;AAEA,QAAIZ,WAAW,CAACa,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BV,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDE,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,UAAMc,YAAY,GAAGf,YAAY,CAACgB,OAAb,CAAqBJ,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AAEAb,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAlBD;;AAoBA,QAAMe,YAAY,GAAG,CAACd,kBAAD,IAAuBE,kBAA5C;AAEA,QAAMa,cAAc,GAAGf,kBAAkB,GACrC,sBADqC,GAErC,cAFJ;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEe,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAElB,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAEC,WAJT;AAKE,QAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,EASGQ,YAAY,iBACX;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEJ,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9DD;;GAAMd,W;;KAAAA,W;AAgEN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst SimpleInput = () => {\n  const nameInputRef = useRef();\n  const [enteredText, setEnteredText] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name Input is Valid!\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredText(event.target.value);\n  };\n\n  const formSubmissionHandler = () => {\n    // event.perventDefault();\n\n    if (enteredText.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameTouched(true);\n\n    setEnteredNameIsValid(true);\n\n    console.log(enteredText);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    setEnteredText(\"\");\n  };\n\n  const inputNameBox = !enteredNameIsValid && enteredNameTouched;\n\n  const inputBoxEffect = enteredNameIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <div>\n      <div className={inputBoxEffect}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          value={enteredText}\n          onChange={nameInputChangeHandler}\n        />\n        {inputNameBox && (\n          <p className=\"error-text\">name must not empty!!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button onClick={formSubmissionHandler}>Submit</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}